/**
 *  BDI
 *  Author: GAMA Automatic Generator
 *  Description: Unit tests of operators belonging to "BDI".
 */

experiment "Run Tests" type: test {	

	
		test "get_belief_op" {
			mental_state var0 <- get_belief_op(self,predicate("has_water")); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_belief_with_name_op" {
			mental_state var0 <- get_belief_with_name_op(self,"has_water"); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_current_intention_op" {
			mental_state var0 <- get_current_intention_op(self); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_desire_op" {
			mental_state var0 <- get_belief_op(self,predicate("has_water")); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_desire_with_name_op" {
			mental_state var0 <- get_desire_with_name_op(self,"has_water"); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_ideal_op" {
			mental_state var0 <- get_ideal_op(self,predicate("has_water")); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_ideal_with_name_op" {
			mental_state var0 <- get_ideal_with_name_op(self,"has_water"); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_obligation_op" {
			mental_state var0 <- get_obligation_op(self,predicate("has_water")); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_obligation_with_name_op" {
			mental_state var0 <- get_obligation_with_name_op(self,"has_water"); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_uncertainty_op" {
			mental_state var0 <- get_uncertainty_op(self,predicate("has_water")); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "get_uncertainty_with_name_op" {
			mental_state var0 <- get_uncertainty_with_name_op(self,"has_water"); 	// var0 equals nil
			assert var0 = nil; 

		}
	
		test "has_belief_op" {
			bool var0 <- has_belief_op(self,predicate("has_water")); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_belief_with_name_op" {
			bool var0 <- has_belief_with_name_op(self,"has_water"); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_desire_op" {
			bool var0 <- has_desire_op(self,predicate("has_water")); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_desire_with_name_op" {
			bool var0 <- has_desire_with_name_op(self,"has_water"); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_ideal_op" {
			bool var0 <- has_ideal_op(self,predicate("has_water")); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_ideal_with_name_op" {
			bool var0 <- has_ideal_with_name_op(self,"has_water"); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_intention_op" {
			bool var0 <- has_intention_op(self,predicate("has_water")); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_intention_with_name_op" {
			bool var0 <- has_intention_with_name_op(self,"has_water"); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_obligation_op" {
			bool var0 <- has_obligation_op(self,predicate("has_water")); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_obligation_with_name_op" {
			bool var0 <- has_obligation_with_name_op(self,"has_water"); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_uncertainty_op" {
			bool var0 <- has_uncertainty_op(self,predicate("has_water")); 	// var0 equals false
			assert var0 = false; 

		}
	
		test "has_uncertainty_with_name_op" {
			bool var0 <- has_uncertainty_with_name_op(self,"has_water"); 	// var0 equals false
			assert var0 = false; 

		}
	
}

	