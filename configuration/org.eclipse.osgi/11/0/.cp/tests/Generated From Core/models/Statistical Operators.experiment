/**
 *  Statistical Operators
 *  Author: GAMA Automatic Generator
 *  Description: Unit tests of operators belonging to "Statistical Operators".
 */

experiment "Run Tests" type: test {	

	
		test "dbscan" {
			list<list> var0 <- dbscan ([[2,4,5], [3,8,2], [1,1,3], [4,3,4]],10,2); 	// var0 equals [[0,1,2,3]]
			assert var0 = [[0,1,2,3]]; 

		}
	
		test "dtw" {
			float var0 <- dtw([32.0,5.0,1.0,3.0],[1.0,10.0,5.0,1.0]); 	// var0 equals 38.0
			assert var0 = 38.0; 
			float var1 <- dtw([10.0,5.0,1.0, 3.0],[1.0,10.0,5.0,1.0], 2); 	// var1 equals 11.0
			assert var1 = 11.0; 

		}
	
		test "gamma_rnd" {
			float var0 <- gamma_distribution_complemented(2,3,0.9) with_precision(3); 	// var0 equals 0.731
			assert var0 = 0.731; 

		}
	
		test "geometric_mean" {
			float var0 <- geometric_mean ([4.5, 3.5, 5.5, 7.0]); 	// var0 equals 4.962326343467649
			assert var0 = 4.962326343467649; 

		}
	
		test "harmonic_mean" {
			float var0 <- harmonic_mean ([4.5, 3.5, 5.5, 7.0]); 	// var0 equals 4.804159445407279
			assert var0 = 4.804159445407279; 

		}
	
		test "kmeans" {
			list<list> var0 <- kmeans ([[2,4,5], [3,8,2], [1,1,3], [4,3,4]],2); 	// var0 equals [[0,2,3],[1]]
			assert var0 = [[0,2,3],[1]]; 
			list<list> var1 <- kmeans ([[2,4,5], [3,8,2], [1,1,3], [4,3,4]],2,10); 	// var1 equals [[0,2,3],[1]]
			assert var1 = [[0,2,3],[1]]; 

		}
	
		test "kurtosis" {
			float var0 <- kurtosis ([1,2,3,4,5]); 	// var0 equals -1.200000000000002
			assert var0 = -1.200000000000002; 

		}
	
		test "max" {
			unknown var0 <- max ([100, 23.2, 34.5]); 	// var0 equals 100.0
			assert var0 = 100.0; 
			unknown var1 <- max([{1.0,3.0},{3.0,5.0},{9.0,1.0},{7.0,8.0}]); 	// var1 equals {9.0,1.0}
			assert var1 = {9.0,1.0}; 

		}
	
		test "mean" {
			unknown var0 <- mean ([4.5, 3.5, 5.5, 7.0]); 	// var0 equals 5.125 
			assert var0 = 5.125 ; 

		}
	
		test "mean_deviation" {
			float var0 <- mean_deviation ([4.5, 3.5, 5.5, 7.0]); 	// var0 equals 1.125
			assert var0 = 1.125; 

		}
	
		test "median" {
			unknown var0 <- median ([4.5, 3.5, 5.5, 3.4, 7.0]); 	// var0 equals 4.5
			assert var0 = 4.5; 

		}
	
		test "min" {
			unknown var0 <- min ([100, 23.2, 34.5]); 	// var0 equals 23.2
			assert var0 = 23.2; 

		}
	
		test "mul" {
			unknown var0 <- mul ([100, 23.2, 34.5]); 	// var0 equals 80040.0
			assert var0 = 80040.0; 

		}
	
		test "skewness" {
			float var0 <- skewness ([1,2,3,4,5]); 	// var0 equals 0.0
			assert var0 = 0.0; 

		}
	
		test "split" {
			list<list<unknown>> var0 <- split([1.0,2.0,1.0,3.0,1.0,2.0]); 	// var0 equals [[1.0,1.0,1.0],[2.0,2.0],[3.0]]
			assert var0 = [[1.0,1.0,1.0],[2.0,2.0],[3.0]]; 

		}
	
		test "split_in" {
			list<float> l <- [1.0,3.1,5.2,6.0,9.2,11.1,12.0,13.0,19.9,35.9,40.0];
			list<list<unknown>> var1 <- split_in(l,3, true); 	// var1 equals [[1.0,3.1,5.2,6.0,9.2,11.1,12.0,13.0],[19.9],[35.9,40.0]]
			assert var1 = [[1.0,3.1,5.2,6.0,9.2,11.1,12.0,13.0],[19.9],[35.9,40.0]]; 
			list<float> li <- [1.0,3.1,5.2,6.0,9.2,11.1,12.0,13.0,19.9,35.9,40.0];
			list<list<unknown>> var3 <- split_in(li,3); 	// var3 equals [[1.0,3.1,5.2,6.0,9.2,11.1,12.0,13.0],[19.9],[35.9,40.0]]
			assert var3 = [[1.0,3.1,5.2,6.0,9.2,11.1,12.0,13.0],[19.9],[35.9,40.0]]; 

		}
	
		test "split_using" {
			list<float> l <- [1.0,3.1,5.2,6.0,9.2,11.1,12.0,13.0,19.9,35.9,40.0];
			list<list<unknown>> var1 <- split_using(l,[1.0,3.0,4.2], true); 	// var1 equals [[],[1.0],[3.1],[5.2,6.0,9.2,11.1,12.0,13.0,19.9,35.9,40.0]]
			assert var1 = [[],[1.0],[3.1],[5.2,6.0,9.2,11.1,12.0,13.0,19.9,35.9,40.0]]; 
			list<float> li <- [1.0,3.1,5.2,6.0,9.2,11.1,12.0,13.0,19.9,35.9,40.0];
			list<list<unknown>> var3 <- split_using(li,[1.0,3.0,4.2]); 	// var3 equals [[],[1.0],[3.1],[5.2,6.0,9.2,11.1,12.0,13.0,19.9,35.9,40.0]]
			assert var3 = [[],[1.0],[3.1],[5.2,6.0,9.2,11.1,12.0,13.0,19.9,35.9,40.0]]; 

		}
	
		test "standard_deviation" {
			float var0 <- standard_deviation ([4.5, 3.5, 5.5, 7.0]); 	// var0 equals 1.2930100540985752
			assert var0 = 1.2930100540985752; 

		}
	
		test "sum" {
			int var0 <- sum ([12,10,3]); 	// var0 equals 25
			assert var0 = 25; 
			unknown var1 <- sum([{1.0,3.0},{3.0,5.0},{9.0,1.0},{7.0,8.0}]); 	// var1 equals {20.0,17.0}
			assert var1 = {20.0,17.0}; 

		}
	
		test "variance" {
			float var0 <- variance ([4.5, 3.5, 5.5, 7.0]); 	// var0 equals 1.671875
			assert var0 = 1.671875; 

		}
	
}

	