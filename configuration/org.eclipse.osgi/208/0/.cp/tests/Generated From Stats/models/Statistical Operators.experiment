/**
 *  Statistical Operators
 *  Author: GAMA Automatic Generator
 *  Description: Unit tests of operators belonging to "Statistical Operators".
 */

experiment "Run Tests" type: test {	

	
		test "auto_correlation" {
			float var0 <- auto_correlation([1,0,1,0,1,0],2); 	// var0 equals 1
			assert var0 = 1; 
			float var1 <- auto_correlation([1,0,1,0,1,0],1); 	// var1 equals -1
			assert var1 = -1; 

		}
	
		test "beta" {
			float var0 <- beta(4,5) with_precision(4); 	// var0 equals 0.0036
			assert var0 = 0.0036; 

		}
	
		test "binomial_coeff" {
			float var0 <- binomial_coeff(10,2); 	// var0 equals 45
			assert var0 = 45; 

		}
	
		test "binomial_complemented" {
			float var0 <- binomial_complemented(10,5,0.5) with_precision(2); 	// var0 equals 0.38
			assert var0 = 0.38; 

		}
	
		test "binomial_sum" {
			float var0 <- binomial_sum(5,10,0.5) with_precision(2); 	// var0 equals 0.62
			assert var0 = 0.62; 

		}
	
		test "chi_square" {
			float var0 <- chi_square(20.0,10) with_precision(3); 	// var0 equals 0.971
			assert var0 = 0.971; 

		}
	
		test "chi_square_complemented" {
			float var0 <- chi_square_complemented(2,10) with_precision(3); 	// var0 equals 0.996
			assert var0 = 0.996; 

		}
	
		test "correlation" {
			float var0 <- correlation([1,2,1,3,1,2], [1,2,1,3,1,2]) with_precision(4); 	// var0 equals 1.2
			assert var0 = 1.2; 
			float var1 <- correlation([13,2,1,4,1,2], [1,2,1,3,1,2]) with_precision(2); 	// var1 equals -0.21
			assert var1 = -0.21; 

		}
	
		test "covariance" {
			float var0 <- covariance([13,2,1,4,1,2], [1,2,1,3,1,2]) with_precision(2); 	// var0 equals -0.67
			assert var0 = -0.67; 

		}
	
		test "durbin_watson" {
			float var0 <- durbin_watson([13,2,1,4,1,2]) with_precision(4); 	// var0 equals 0.7231
			assert var0 = 0.7231; 

		}
	
		test "gamma" {
			float var0 <- gamma(5); 	// var0 equals 24.0
			assert var0 = 24.0; 

		}
	
		test "gamma_distribution" {
			float var0 <- gamma_distribution(2,3,0.9) with_precision(3); 	// var0 equals 0.269
			assert var0 = 0.269; 

		}
	
		test "gamma_distribution_complemented" {
			float var0 <- gamma_distribution_complemented(2,3,0.9) with_precision(3); 	// var0 equals 0.731
			assert var0 = 0.731; 

		}
	
		test "incomplete_beta" {
			float var0 <- incomplete_beta(2,3,0.9) with_precision(3); 	// var0 equals 0.996
			assert var0 = 0.996; 

		}
	
		test "incomplete_gamma" {
			float var0 <- incomplete_gamma(1,5.3) with_precision(3); 	// var0 equals 0.995
			assert var0 = 0.995; 

		}
	
		test "incomplete_gamma_complement" {
			float var0 <- incomplete_gamma_complement(1,5.3) with_precision(3); 	// var0 equals 0.005
			assert var0 = 0.005; 

		}
	
		test "kurtosis" {
			float var0 <- kurtosis(3,12) with_precision(4); 	// var0 equals -2.9999
			assert var0 = -2.9999; 
			float var1 <- kurtosis([13,2,1,4,1,2]) with_precision(4); 	// var1 equals 4.8083
			assert var1 = 4.8083; 

		}
	
		test "log_gamma" {
			float var0 <- log_gamma(0.6) with_precision(4); 	// var0 equals 0.3982
			assert var0 = 0.3982; 

		}
	
		test "moment" {
			float var0 <- moment([13,2,1,4,1,2], 2, 1.2) with_precision(4); 	// var0 equals 24.74
			assert var0 = 24.74; 

		}
	
		test "normal_area" {
			float var0 <- normal_area(0.9,0,1) with_precision(3); 	// var0 equals 0.816
			assert var0 = 0.816; 

		}
	
		test "normal_density" {
			float var0 <- (normal_density(2,1,1)*100) with_precision 2; 	// var0 equals 24.2
			assert var0 = 24.2; 

		}
	
		test "normal_inverse" {
			float var0 <- normal_inverse(0.98,0,1) with_precision(2); 	// var0 equals 2.05
			assert var0 = 2.05; 

		}
	
		test "pValue_for_fStat" {
			float var0 <- pValue_for_fStat(1.9,10,12) with_precision(3); 	// var0 equals 0.145
			assert var0 = 0.145; 

		}
	
		test "pValue_for_tStat" {
			float var0 <- pValue_for_tStat(0.9,10) with_precision(3); 	// var0 equals 0.389
			assert var0 = 0.389; 

		}
	
		test "quantile" {
			float var0 <- quantile([1,3,5,6,9,11,12,13,19,21,22,32,35,36,45,44,55,68,79,80,81,88,90,91,92,100], 0.5); 	// var0 equals 35.5
			assert var0 = 35.5; 

		}
	
		test "quantile_inverse" {
			float var0 <- quantile_inverse([1,3,5,6,9,11,12,13,19,21,22,32,35,36,45,44,55,68,79,80,81,88,90,91,92,100], 35.5) with_precision(2); 	// var0 equals 0.52
			assert var0 = 0.52; 

		}
	
		test "rank_interpolated" {
			float var0 <- rank_interpolated([1,3,5,6,9,11,12,13,19,21,22,32,35,36,45,44,55,68,79,80,81,88,90,91,92,100], 35); 	// var0 equals 13.0
			assert var0 = 13.0; 

		}
	
		test "rms" {
			 list<float> data_sequence <- [6.0, 7.0, 8.0, 9.0]; 
			 list<float> squares <- data_sequence collect (each*each); 
			float var2 <-  rms(length(data_sequence),sum(squares)) with_precision(4) ; 	// var2 equals 7.5829
			assert var2 = 7.5829; 

		}
	
		test "skew" {
			float var0 <- skew([1,3,5,6,9,11,12,13]) with_precision(2); 	// var0 equals -0.14
			assert var0 = -0.14; 
			float var1 <- skew(-10.125,4.407785) with_precision(2); 	// var1 equals -0.12
			assert var1 = -0.12; 

		}
	
		test "student_area" {
			float var0 <- student_area(1.64,3) with_precision(2); 	// var0 equals 0.9
			assert var0 = 0.9; 

		}
	
		test "student_t_inverse" {
			float var0 <- student_t_inverse(0.9,3) with_precision(2); 	// var0 equals 1.64
			assert var0 = 1.64; 

		}
	
		test "variance" {
			int var0 <- int(variance([1,3,5,6,9,11,12,13])); 	// var0 equals 17
			assert var0 = 17; 
			int var1 <- int(variance(4,16,84)); 	// var1 equals 5
			assert var1 = 5; 

		}
	
}

	